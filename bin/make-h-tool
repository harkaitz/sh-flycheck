#!/bin/sh -e
##:
#h: Usage: make-h-tool { CMD ARGS... | MAKE-ARGS... }
#h:
#h: Perform a dry execution of the makefile.
#h:
#h: ... show                 : Show configuration.
#h: ... dry-run MAKE-ARGS... : Run "make -n" to create ".make.dryrun" and ".make.environment".
#h: ... dry-show             : Show compilation and cd commands.
#h: ... chk-update           : Create "~/.commands.d/LANG" and "~/.environment.d/CHKSUM".
#h: ... run COMMAND          : Execute COMMAND with "MAKE=make-h-tool".
#h: ... MAKE-ARGS...         : make(1), dry-run(2), chk-update(3).
#h:
#h: Examples:
#h:
#h: > make-h-tool run ./build.sh build
##:
make_h_tool() {
    local cmd="$1"
    shift
    case "${cmd}" in
        dry-run)       make_h_tool_dry_run "$@" ;;
        dry-show)      make_h_tool_dry_show     ;;
        chk-update)    make_h_tool_chk_update   ;;
        run)           env MAKE="$0" "$@"       ;;
        *)             make_h_tool_make "${cmd}" "$@";;
    esac
}
make_h_tool_show_variables() {
    echo "GITDIR   : ${GITDIR}"
    echo "COMMANDS : ${COMMANDS}"
    echo "NULLFILE : ${NULLFILE}"
}
make_h_tool_calc_variables() {
    GITDIR="${GITDIR:-$(pwd)}"
    COMMANDS="${COMMANDS:-${HOME}/.commands.d}"
    ENVIRONMENTS="${ENVIRONMENTS:-${HOME}/.environment.d}"
    case "$(uname -s)" in
        Windows_NT|CYG*) NULLFILE="NUL";;
        *)               NULLFILE="/dev/null";;
    esac
}
## ------------------------------------------------------------------------
make_h_tool_make() {
    MAKE=make make "$@"
    make_h_tool_dry_run "$@"
    make_h_tool_chk_update
}
make_h_tool_dry_run() {
    echo "== Generating '${GITDIR}/.make.environment' ..."
    export > "${GITDIR}/.make.environment"
    echo "== Generating '${GITDIR}/.make.dryrun' ..."
    
    if MAKE=make make -w -k -B -j 1 -n "$@" -j 1 VERBOSE=1 V=1 >> "${GITDIR}/.make.dryrun" 2> "${GITDIR}/.make.dryrun.2"; then
        true
    fi
}
make_h_tool_dry_show() {
    sed -n "
    s|/cygdrive/\([a-zA-Z]\)/|\1:/|g
    s|make.*: Entering directory '/cygdrive/c\\(.*\\)'|cd C:/\\1|p
    s|make.*: Entering directory '\\(.*\\)'|cd \\1|p
    s|^CL |cl |pI
    s|^gcc |gcc |pI
    s|^\([^ ]*-gcc\) |\1 |pI
    
    " "${GITDIR}/.make.dryrun"
}
make_h_tool_chk_update() {
    local cmd args pwd pwd="$(pwd)"
    
    mkdir -p "${COMMANDS}"
    touch "${COMMANDS}"/c "${COMMANDS}"/cpp
    sed -i "\\|^${GITDIR}|d" "${COMMANDS}"/c "${COMMANDS}"/cpp
    
    if test -f "${GITDIR}/.make.environment"; then
        MD5SUM="$(md5sum < "${GITDIR}/.make.environment" | sed 's| .*||')"
        mkdir -p "${ENVIRONMENTS}"
        cp "${GITDIR}/.make.environment" "${ENVIRONMENTS}/${MD5SUM}"
    else
        MD5SUM=""
    fi
    
    make_h_tool_dry_show | while read -r cmd args; do
        case "${cmd}" in
            'cd')
                cd "${args}"
                DIR_LIST=""
                continue
                ;;
            cl|gcc|*-gcc|g++|*-g++)
                eval "make_h_tool_command ${cmd} ${args}"
                ;;
            *)  continue
                ;;
        esac
    done
    echo >&2 ""
    cd "${pwd}"
}
## ------------------------------------------------------------------------
make_h_tool_command() {
    local a suf="" cmd="" type= dir="" src="" skip=
    
    ## Extract command.
    case "${1}" in
        cl)        cmd="cl /Fo${NULLFILE} /c"   type=msc; shift;;
        gcc|*-gcc) cmd="${1} -o ${NULLFILE} -S" type=gcc; shift;;
    esac

    ## Analyze arguments.
    for arg in "$@"; do
        if test -n "${skip}"; then
            skip=
            continue
        fi
        case "${type}@${arg}" in
            gcc@-c)   true;;
            msc@/c)   true;;
            msc@/C)   true;;
            msc@/Fo*) true;;
            gcc@-o)   skip=y;;
            gcc@-*) cmd="${cmd} '${arg}'";;
            msc@/*) cmd="${cmd} '${arg}'";;
            *.c|*.cpp)
                if test ! -n "${dir}"; then
                    
                    dir="$(dirname "${arg}")"
                    
                    case "${DIR_LIST}" in *:"${dir}":*) return 0;; esac
                    DIR_LIST="${DIR_LIST}:${dir}:"
                    
                    cmd="${cmd} \"\$1\""
                    dir="$(readlink -f "${dir}")"
                    suf="${arg##*.}"
                fi
                ;;
            *)  cmd="${cmd} '${arg}'";;
        esac
    done
    
    ## Add commands to commands.
    if test -n "${suf}"; then
        echo -n '.' >&2
        echo "${dir};$(pwd);${MD5SUM};${cmd}" >> "${COMMANDS}/${suf}"
    fi
}
## ------------------------------------------------------------------------
make_h_tool_calc_variables
if test @"${SCRNAME:-$(basename "$0")}" = @"make-h-tool"; then
    case "$(uname -s)" in
        CYG*) busybox sh -e "$(cygpath -w "$0")" "$@"; exit 0;;
        MIN*) busybox sh -e "$0"                 "$@"; exit 0;;
    esac
    case "${1}" in
        ''|-h|--help) sed -n 's/^ *#h: \{0,1\}//p' "$0";;
        *)            make_h_tool "$@"; exit 0;;
    esac
fi
